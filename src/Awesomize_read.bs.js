// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE
'use strict';

var Js_exn = require("bs-platform/lib/js/js_exn.js");
var Js_dict = require("bs-platform/lib/js/js_dict.js");
var Js_json = require("bs-platform/lib/js/js_json.js");
var Caml_option = require("bs-platform/lib/js/caml_option.js");

function key(key$1, input) {
  return Promise.resolve(Js_dict.get(input, key$1));
}

function path(_list, _input) {
  while(true) {
    var input = _input;
    var list = _list;
    if (!list) {
      return Js_exn.raiseError("Path must have at least one item");
    }
    var xs = list.tl;
    var key = list.hd;
    if (!xs) {
      return Promise.resolve(Js_dict.get(input, key));
    }
    var thing = Js_dict.get(input, key);
    if (thing === undefined) {
      return Promise.resolve(undefined);
    }
    var dict = Js_json.classify(Caml_option.valFromOption(thing));
    if (typeof dict === "number") {
      return Promise.resolve(undefined);
    }
    if (dict.TAG !== /* JSONObject */2) {
      return Promise.resolve(undefined);
    }
    _input = dict._0;
    _list = xs;
    continue ;
  };
}

exports.key = key;
exports.path = path;
/* No side effect */
